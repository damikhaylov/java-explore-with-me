CREATE TABLE IF NOT EXISTS users
(
    id    INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name  VARCHAR(255)                         NOT NULL UNIQUE,
    email VARCHAR(255)                         NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS categories
(
    id   INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    name VARCHAR(255)                         NOT NULL UNIQUE
);

CREATE TABLE IF NOT EXISTS events
(
    id                 INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    title              VARCHAR(120)                         NOT NULL,
    annotation         VARCHAR(2000)                        NOT NULL,
    description        VARCHAR(7000)                        NOT NULL,
    category_id        INT REFERENCES categories (id) ON DELETE RESTRICT,
    event_date         TIMESTAMP                            NOT NULL,
    latitude           float                                NOT NULL,
    longitude          float                                NOT NULL,
    paid               BOOLEAN,
    participant_limit  INT,
    request_moderation BOOLEAN,
    initiator_id       INT REFERENCES users (id) ON DELETE RESTRICT,
    state              varchar(20)                          NOT NULL,
    created            TIMESTAMP                            NOT NULL,
    published          TIMESTAMP
);

CREATE TABLE IF NOT EXISTS requests
(
    id           INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    event_id     INT REFERENCES events (id) ON DELETE CASCADE,
    requester_id INT REFERENCES users (id) ON DELETE CASCADE,
    created      TIMESTAMP                            NOT NULL,
    status       varchar(20)                          NOT NULL
);

CREATE TABLE IF NOT EXISTS compilations
(
    id     INT GENERATED BY DEFAULT AS IDENTITY NOT NULL PRIMARY KEY,
    title  VARCHAR(120)                         NOT NULL,
    pinned BOOLEAN DEFAULT FALSE
);

CREATE TABLE IF NOT EXISTS compilation_events
(
    compilation_id INT REFERENCES compilations (id) ON DELETE CASCADE,
    event_id       INT REFERENCES events (id) ON DELETE CASCADE
);